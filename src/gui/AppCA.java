/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bd.Conexion;
import bd.Data;
import com.sun.javafx.image.impl.IntArgb;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import model.*;

/**
 *
 * @author Emilio
 */
public class AppCA extends javax.swing.JFrame {

    private Data d;

    /**
     * Creates new form AppCA
     */
    public AppCA() {
        initComponents();
        try {
            d = new Data();
            iniciar();
            setLocationRelativeTo(null);
        } catch (SQLException ex) {
            System.out.println("Error de conexion: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JFMain = new javax.swing.JFrame();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabPartidos = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        txtPartido_ID = new javax.swing.JTextField();
        btnPartido_Crear = new javax.swing.JButton();
        btnPartidoActualizar = new javax.swing.JButton();
        btnPartidoCancelar = new javax.swing.JButton();
        btnPartidoEliminar = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        cboPartido_SeleccionA = new javax.swing.JComboBox<>();
        cboPartido_SeleccionB = new javax.swing.JComboBox<>();
        cboPartido_ArbitroA = new javax.swing.JComboBox<>();
        cboPartido_ArbitroLA = new javax.swing.JComboBox<>();
        cboPartido_ArbitroLB = new javax.swing.JComboBox<>();
        cboPartido_ArbitroD = new javax.swing.JComboBox<>();
        cboPartido_Estadio = new javax.swing.JComboBox<>();
        spPartido_Publico = new javax.swing.JSpinner();
        spPartido_TerminoHora = new javax.swing.JSpinner();
        spPartido_TerminoMinuto = new javax.swing.JSpinner();
        spPartido_InicioHora = new javax.swing.JSpinner();
        spPartido_InicioMinuto = new javax.swing.JSpinner();
        spPartido_Dia = new javax.swing.JSpinner();
        spPartido_Mes = new javax.swing.JSpinner();
        jLabel51 = new javax.swing.JLabel();
        cboPartido_Fase = new javax.swing.JComboBox<>();
        jLabel52 = new javax.swing.JLabel();
        txtPartidoBusqueda = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tabDT = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        txtDT_ID = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        txtDT_Apellido = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        spDT_Edad = new javax.swing.JSpinner();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        cbDT_Club = new javax.swing.JComboBox<>();
        spDT_Anos = new javax.swing.JSpinner();
        txtDT_Sueldo = new javax.swing.JTextField();
        txtDT_Nombre = new javax.swing.JTextField();
        cbDT_Nacionalidad = new javax.swing.JComboBox<>();
        btnCrearDT = new javax.swing.JButton();
        btnActualizarDT = new javax.swing.JButton();
        btnCancelarDT = new javax.swing.JButton();
        btnEliminarDT = new javax.swing.JButton();
        txtBusqueda = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel71 = new javax.swing.JLabel();
        txtBuscarJugador = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        txtIDJugador = new javax.swing.JTextField();
        txtNombreJugador = new javax.swing.JTextField();
        txtApellidoJugador = new javax.swing.JTextField();
        spEdadJugador = new javax.swing.JSpinner();
        spDebutJugador = new javax.swing.JSpinner();
        spSueldoJugador = new javax.swing.JSpinner();
        spGolesJugador = new javax.swing.JSpinner();
        spAtajadasJugador = new javax.swing.JSpinner();
        spTarjetasAmarillas = new javax.swing.JSpinner();
        spTarjetasRojas = new javax.swing.JSpinner();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        cboClubDeportivoJugador = new javax.swing.JComboBox<>();
        cboEstadoFisicoJugador = new javax.swing.JComboBox<>();
        cboNacionalidadJugador = new javax.swing.JComboBox<>();
        cboPosicionJugador = new javax.swing.JComboBox<>();
        chkHabilitado = new javax.swing.JCheckBox();
        chkTitular = new javax.swing.JCheckBox();
        btnCrearJugador = new javax.swing.JButton();
        btnActualizarJugador = new javax.swing.JButton();
        btnCancelarJugador = new javax.swing.JButton();
        btnEliminarJugador = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tabJugador = new javax.swing.JTable();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tabCT = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jLabel86 = new javax.swing.JLabel();
        txtIDCT = new javax.swing.JTextField();
        jLabel87 = new javax.swing.JLabel();
        txtApellidoCT = new javax.swing.JTextField();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        spEdadCT = new javax.swing.JSpinner();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        cboClubDeportivoCT = new javax.swing.JComboBox<>();
        spAniosCT = new javax.swing.JSpinner();
        txtNombreCT = new javax.swing.JTextField();
        cboNacionalidadCT = new javax.swing.JComboBox<>();
        btnCrearCT = new javax.swing.JButton();
        btnActualizarCT = new javax.swing.JButton();
        btnCancelarCT = new javax.swing.JButton();
        btnEliminarCT = new javax.swing.JButton();
        spSueldoCT = new javax.swing.JSpinner();
        txtBusquedaCT = new javax.swing.JTextField();
        jLabel94 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtArbitroBuscar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtArbitroID = new javax.swing.JTextField();
        txtArbitroNombre = new javax.swing.JTextField();
        txtArbitroApellid = new javax.swing.JTextField();
        cboArbitroPais = new javax.swing.JComboBox<>();
        spArbitroEdad = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabArbitro = new javax.swing.JTable();
        btnArbitroCrear = new javax.swing.JButton();
        btnArbitroActualizar = new javax.swing.JButton();
        btnArbitroEliminar = new javax.swing.JButton();
        btnArbitroCancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabClubDeportivo = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtClubID = new javax.swing.JTextField();
        txtClubNombre = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtClubBusqueda = new javax.swing.JTextField();
        btnClubCrear = new javax.swing.JButton();
        btnClubCancelar = new javax.swing.JButton();
        btnClubActualizar = new javax.swing.JButton();
        btnClubEliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtLoginPass = new javax.swing.JPasswordField();
        txtLoginUser = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();

        JFMain.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        JFMain.setResizable(false);
        JFMain.setSize(new java.awt.Dimension(700, 700));

        jTabbedPane2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTabbedPane2KeyReleased(evt);
            }
        });

        tabPartidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabPartidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabPartidosMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tabPartidos);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel39.setText("ID");

        txtPartido_ID.setEditable(false);

        btnPartido_Crear.setText("Crear");
        btnPartido_Crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPartido_CrearActionPerformed(evt);
            }
        });
        btnPartido_Crear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btnPartido_CrearKeyReleased(evt);
            }
        });

        btnPartidoActualizar.setText("Actualizar");
        btnPartidoActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPartidoActualizarActionPerformed(evt);
            }
        });

        btnPartidoCancelar.setText("Cancelar");
        btnPartidoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPartidoCancelarActionPerformed(evt);
            }
        });

        btnPartidoEliminar.setText("Eliminar");
        btnPartidoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPartidoEliminarActionPerformed(evt);
            }
        });

        jLabel40.setText("Seleccion 1");

        jLabel41.setText("Seleccion 2");

        jLabel42.setText("1er Arbitro");

        jLabel43.setText("Arbitro Lateral 1");

        jLabel44.setText("Arbitro Lateral 2");

        jLabel45.setText("Cuarto Arbitro");

        jLabel46.setText("Estadio");

        jLabel47.setText("Fecha");

        jLabel48.setText("Publico");

        jLabel49.setText("Hora inicio");

        jLabel50.setText("Hora Termino");

        cboPartido_SeleccionA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPartido_SeleccionB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPartido_ArbitroA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPartido_ArbitroLA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPartido_ArbitroLB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPartido_ArbitroD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPartido_Estadio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        spPartido_TerminoHora.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        spPartido_TerminoMinuto.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        spPartido_InicioHora.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        spPartido_InicioMinuto.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        spPartido_Dia.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        spPartido_Mes.setModel(new javax.swing.SpinnerListModel(new String[] {"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"}));

        jLabel51.setText("Fase");

        cboPartido_Fase.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44)
                            .addComponent(jLabel45)
                            .addComponent(jLabel46)
                            .addComponent(jLabel48)
                            .addComponent(jLabel47)
                            .addComponent(jLabel49)
                            .addComponent(jLabel50)
                            .addComponent(jLabel51))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboPartido_Estadio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboPartido_Fase, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboPartido_SeleccionA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboPartido_SeleccionB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spPartido_Publico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPartido_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(spPartido_InicioHora, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spPartido_InicioMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(spPartido_Dia, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spPartido_Mes, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cboPartido_ArbitroD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboPartido_ArbitroLB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboPartido_ArbitroLA, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboPartido_ArbitroA, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(spPartido_TerminoHora, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spPartido_TerminoMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(btnPartidoCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPartidoEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(btnPartido_Crear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPartidoActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(txtPartido_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboPartido_SeleccionA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboPartido_SeleccionB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(cboPartido_ArbitroA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(cboPartido_ArbitroLA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44)
                    .addComponent(cboPartido_ArbitroLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(cboPartido_ArbitroD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46)
                    .addComponent(cboPartido_Estadio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spPartido_Publico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48))
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spPartido_Dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spPartido_Mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spPartido_InicioHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spPartido_InicioMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spPartido_TerminoHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spPartido_TerminoMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboPartido_Fase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPartido_Crear)
                    .addComponent(btnPartidoActualizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPartidoCancelar)
                    .addComponent(btnPartidoEliminar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel52.setText("Busqueda");

        txtPartidoBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPartidoBusquedaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel52)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPartidoBusqueda)))
                .addGap(14, 14, 14))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52)
                    .addComponent(txtPartidoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Partidos", jPanel7);

        tabDT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabDT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabDTMouseReleased(evt);
            }
        });
        tabDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabDTKeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(tabDT);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel53.setText("ID");

        txtDT_ID.setEditable(false);

        jLabel63.setText("Nombre");

        txtDT_Apellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDT_ApellidoActionPerformed(evt);
            }
        });

        jLabel64.setText("Apellido");

        jLabel65.setText("Edad");

        jLabel66.setText("Nacionalidad");

        jLabel67.setText("Club Deportivo");

        jLabel68.setText("Años como DT");

        jLabel69.setText("Sueldo Fifa");

        cbDT_Club.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtDT_Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDT_NombreActionPerformed(evt);
            }
        });

        cbDT_Nacionalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnCrearDT.setText("Crear");
        btnCrearDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearDTActionPerformed(evt);
            }
        });

        btnActualizarDT.setText("Actualizar");
        btnActualizarDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarDTActionPerformed(evt);
            }
        });

        btnCancelarDT.setText("Cancelar");
        btnCancelarDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarDTActionPerformed(evt);
            }
        });

        btnEliminarDT.setText("Eliminar");
        btnEliminarDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCancelarDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCrearDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnActualizarDT, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(btnEliminarDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel53)
                            .addComponent(jLabel63))
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(txtDT_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(txtDT_Nombre))))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel68)
                            .addComponent(jLabel69))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spDT_Anos)
                            .addComponent(txtDT_Sueldo)))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel65)
                            .addComponent(jLabel66)
                            .addComponent(jLabel64)
                            .addComponent(jLabel67))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbDT_Club, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spDT_Edad, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDT_Apellido, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbDT_Nacionalidad, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(txtDT_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(txtDT_Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDT_Apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spDT_Edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel66)
                    .addComponent(cbDT_Nacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(cbDT_Club))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(spDT_Anos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(txtDT_Sueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearDT)
                    .addComponent(btnActualizarDT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarDT)
                    .addComponent(btnEliminarDT))
                .addContainerGap())
        );

        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyReleased(evt);
            }
        });

        jLabel70.setText("Busqueda");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel70)
                        .addGap(18, 18, 18)
                        .addComponent(txtBusqueda)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel70))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Director Tecnico", jPanel11);

        jLabel71.setText("Búsqueda:");

        txtBuscarJugador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarJugadorKeyReleased(evt);
            }
        });

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel72.setText("ID:");

        jLabel73.setText("Nombre:");

        jLabel74.setText("Apellido:");

        jLabel75.setText("Edad:");

        jLabel76.setText("Debut:");

        jLabel77.setText("Goles:");

        jLabel78.setText("Atajadas:");

        jLabel79.setText("T. Amarillas:");

        jLabel80.setText("T. Rojas:");

        jLabel81.setText("Sueldo:");

        txtIDJugador.setEnabled(false);

        jLabel82.setText("Posición:");

        jLabel83.setText("Nacionalidad:");

        jLabel84.setText("C. Deportivo:");

        jLabel85.setText("Estado Físico:");

        cboClubDeportivoJugador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboEstadoFisicoJugador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboNacionalidadJugador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboPosicionJugador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboPosicionJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPosicionJugadorActionPerformed(evt);
            }
        });

        chkHabilitado.setText("Habilitado");

        chkTitular.setText("Titular");

        btnCrearJugador.setText("Añadir");
        btnCrearJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearJugadorActionPerformed(evt);
            }
        });

        btnActualizarJugador.setText("Modificar");
        btnActualizarJugador.setEnabled(false);
        btnActualizarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarJugadorActionPerformed(evt);
            }
        });

        btnCancelarJugador.setText("Cancelar");
        btnCancelarJugador.setEnabled(false);
        btnCancelarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarJugadorActionPerformed(evt);
            }
        });

        btnEliminarJugador.setText("Eliminar");
        btnEliminarJugador.setEnabled(false);
        btnEliminarJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarJugadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel72)
                                    .addComponent(jLabel73)
                                    .addComponent(jLabel74)
                                    .addComponent(jLabel75)
                                    .addComponent(jLabel76)
                                    .addComponent(jLabel81))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombreJugador, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtApellidoJugador, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(spEdadJugador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                                    .addComponent(spDebutJugador, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtIDJugador, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spSueldoJugador)))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel77)
                                    .addComponent(jLabel78))
                                .addGap(40, 40, 40)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spGolesJugador, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                    .addComponent(spAtajadasJugador)))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addComponent(chkHabilitado)
                                .addGap(18, 18, 18)
                                .addComponent(chkTitular))
                            .addGroup(jPanel14Layout.createSequentialGroup()
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel79)
                                    .addComponent(jLabel80)
                                    .addComponent(jLabel85))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboPosicionJugador, 0, 104, Short.MAX_VALUE)
                                    .addComponent(spTarjetasAmarillas)
                                    .addComponent(spTarjetasRojas)
                                    .addComponent(cboNacionalidadJugador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboClubDeportivoJugador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboEstadoFisicoJugador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel84)
                            .addComponent(jLabel83)
                            .addComponent(jLabel82))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnCrearJugador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelarJugador, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnActualizarJugador, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(btnEliminarJugador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel72)
                    .addComponent(txtIDJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(txtNombreJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel74)
                    .addComponent(txtApellidoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(spEdadJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel76)
                    .addComponent(spDebutJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel81)
                    .addComponent(spSueldoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(spGolesJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(spAtajadasJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(spTarjetasAmarillas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80)
                    .addComponent(spTarjetasRojas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel82)
                    .addComponent(cboPosicionJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83)
                    .addComponent(cboNacionalidadJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel84)
                    .addComponent(cboClubDeportivoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel85)
                    .addComponent(cboEstadoFisicoJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkTitular)
                    .addComponent(chkHabilitado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearJugador)
                    .addComponent(btnActualizarJugador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarJugador)
                    .addComponent(btnEliminarJugador)))
        );

        tabJugador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabJugador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabJugadorMouseReleased(evt);
            }
        });
        tabJugador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabJugadorKeyReleased(evt);
            }
        });
        jScrollPane7.setViewportView(tabJugador);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel71)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscarJugador)
                        .addContainerGap())
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(txtBuscarJugador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Jugadores", jPanel13);

        tabCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabCTMouseReleased(evt);
            }
        });
        tabCT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabCTKeyReleased(evt);
            }
        });
        jScrollPane8.setViewportView(tabCT);

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel86.setText("ID");

        txtIDCT.setEditable(false);

        jLabel87.setText("Nombre");

        txtApellidoCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoCTActionPerformed(evt);
            }
        });

        jLabel88.setText("Apellido");

        jLabel89.setText("Edad");

        jLabel90.setText("Nacionalidad");

        jLabel91.setText("Club Deportivo");

        jLabel92.setText("Años en CT:");

        jLabel93.setText("Sueldo FIFA");

        cboClubDeportivoCT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtNombreCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreCTActionPerformed(evt);
            }
        });

        cboNacionalidadCT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnCrearCT.setText("Crear");
        btnCrearCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCTActionPerformed(evt);
            }
        });

        btnActualizarCT.setText("Actualizar");
        btnActualizarCT.setEnabled(false);
        btnActualizarCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarCTActionPerformed(evt);
            }
        });

        btnCancelarCT.setText("Cancelar");
        btnCancelarCT.setEnabled(false);
        btnCancelarCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCTActionPerformed(evt);
            }
        });

        btnEliminarCT.setText("Eliminar");
        btnEliminarCT.setEnabled(false);
        btnEliminarCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCancelarCT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCrearCT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnActualizarCT, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)
                            .addComponent(btnEliminarCT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel86)
                            .addComponent(jLabel87))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreCT)
                            .addComponent(txtIDCT)))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel92)
                            .addComponent(jLabel93))
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(spAniosCT))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spSueldoCT))))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel89)
                            .addComponent(jLabel90)
                            .addComponent(jLabel88)
                            .addComponent(jLabel91))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboClubDeportivoCT, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spEdadCT, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtApellidoCT, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboNacionalidadCT, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel86)
                    .addComponent(txtIDCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel87)
                    .addComponent(txtNombreCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellidoCT, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel88))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spEdadCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel89))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel90)
                    .addComponent(cboNacionalidadCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel91)
                    .addComponent(cboClubDeportivoCT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel92)
                    .addComponent(spAniosCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel93)
                    .addComponent(spSueldoCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearCT)
                    .addComponent(btnActualizarCT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarCT)
                    .addComponent(btnEliminarCT))
                .addContainerGap())
        );

        txtBusquedaCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaCTActionPerformed(evt);
            }
        });
        txtBusquedaCT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaCTKeyReleased(evt);
            }
        });

        jLabel94.setText("Busqueda");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel94)
                        .addGap(18, 18, 18)
                        .addComponent(txtBusquedaCT)))
                .addContainerGap(216, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBusquedaCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel94))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Cuerpo Técnico", jPanel15);

        txtArbitroBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtArbitroBuscarKeyReleased(evt);
            }
        });

        jLabel3.setText("Buscar");

        jLabel4.setText("ID");

        jLabel5.setText("Nombre");

        jLabel6.setText("Apellido");

        jLabel7.setText("Edad");

        jLabel9.setText("Pais");

        txtArbitroID.setEditable(false);

        txtArbitroNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArbitroNombreActionPerformed(evt);
            }
        });

        cboArbitroPais.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tabArbitro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabArbitro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabArbitroMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tabArbitro);

        btnArbitroCrear.setText("Crear");
        btnArbitroCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbitroCrearActionPerformed(evt);
            }
        });

        btnArbitroActualizar.setText("Actualizar");
        btnArbitroActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbitroActualizarActionPerformed(evt);
            }
        });

        btnArbitroEliminar.setText("Eliminar");
        btnArbitroEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbitroEliminarActionPerformed(evt);
            }
        });

        btnArbitroCancelar.setText("Cancelar");
        btnArbitroCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbitroCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtArbitroBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cboArbitroPais, 0, 120, Short.MAX_VALUE)
                                        .addComponent(txtArbitroApellid)
                                        .addComponent(txtArbitroNombre)
                                        .addComponent(txtArbitroID, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(spArbitroEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnArbitroCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnArbitroCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnArbitroEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnArbitroActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(186, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtArbitroBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtArbitroID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtArbitroNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtArbitroApellid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(spArbitroEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cboArbitroPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnArbitroCrear)
                            .addComponent(btnArbitroActualizar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnArbitroCancelar)
                            .addComponent(btnArbitroEliminar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Arbitro", jPanel2);

        tabClubDeportivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabClubDeportivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabClubDeportivoMouseReleased(evt);
            }
        });
        tabClubDeportivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabClubDeportivoKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabClubDeportivo);

        jLabel8.setText("ID");

        jLabel10.setText("Nombre");

        txtClubID.setEditable(false);

        jLabel11.setText("Buscar");

        txtClubBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClubBusquedaKeyReleased(evt);
            }
        });

        btnClubCrear.setText("Crear");
        btnClubCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClubCrearActionPerformed(evt);
            }
        });

        btnClubCancelar.setText("Cancelar");
        btnClubCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClubCancelarActionPerformed(evt);
            }
        });

        btnClubActualizar.setText("Actualizar");
        btnClubActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClubActualizarActionPerformed(evt);
            }
        });

        btnClubEliminar.setText("Eliminar");
        btnClubEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClubEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel8))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtClubID, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtClubNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnClubCrear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnClubCancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnClubActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnClubEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txtClubBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(177, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtClubBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtClubID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtClubNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClubCrear)
                            .addComponent(btnClubActualizar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnClubCancelar)
                            .addComponent(btnClubEliminar)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(181, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Club Deportivo", jPanel3);

        javax.swing.GroupLayout JFMainLayout = new javax.swing.GroupLayout(JFMain.getContentPane());
        JFMain.getContentPane().setLayout(JFMainLayout);
        JFMainLayout.setHorizontalGroup(
            JFMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JFMainLayout.createSequentialGroup()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        JFMainLayout.setVerticalGroup(
            JFMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Login"));

        txtLoginPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLoginPassActionPerformed(evt);
            }
        });
        txtLoginPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLoginPassKeyReleased(evt);
            }
        });

        jLabel2.setText("Pass");

        jLabel1.setText("User");

        btnIniciar.setText("Ingresar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLoginPass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLoginUser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtLoginUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLoginPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIniciar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabPartidosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabPartidosMouseReleased
if (evt.getClickCount() == 1) {
            try {
                int fila = tabPartidos.getSelectedRow();
                int id = (int) tabPartidos.getValueAt(fila, 0);
                Partido p = d.getPartido(id);
                txtPartido_ID.setText(Integer.toString(p.getId()));

                Seleccion s1 = d.getSeleccion(p.getIdSeleccion1());
                int iCbo = cboPartido_SeleccionA.getItemCount();
                for (int i = 0; i < iCbo; i++) {
                    String nombreObj = cboPartido_SeleccionA.getItemAt(i).toString();
                    if (nombreObj.equalsIgnoreCase(s1.getPaisStr())) {
                        cboPartido_SeleccionA.setSelectedIndex(i);
                    }
                }

                Seleccion s2 = d.getSeleccion(p.getIdSeleccion2());
                iCbo = cboPartido_SeleccionB.getItemCount();
                for (int i = 0; i < iCbo; i++) {
                    String nombreObj = cboPartido_SeleccionB.getItemAt(i).toString();
                    if (nombreObj.equalsIgnoreCase(s2.getPaisStr())) {
                        cboPartido_SeleccionB.setSelectedIndex(i);
                    }
                }

                Arbitro a1 = d.getArbitro(p.getArbitro());
                int iCboA = cboPartido_ArbitroA.getItemCount();
                for (int i = 0; i < iCboA; i++) {
                    String nombreObj = cboPartido_ArbitroA.getItemAt(i).toString();
                    String nombre = a1.toString();
                    if (nombreObj.equalsIgnoreCase(nombre)) {
                        cboPartido_ArbitroA.setSelectedIndex(i);
                    }
                }

                Arbitro aL1 = d.getArbitro(p.getArbitroL1());
                int iCboLA = cboPartido_ArbitroLA.getItemCount();
                for (int i = 0; i < iCboLA; i++) {
                    String nombreObj = cboPartido_ArbitroLA.getItemAt(i).toString();
                    String nombre = aL1.toString();
                    if (nombreObj.equalsIgnoreCase(nombre)) {
                        cboPartido_ArbitroLA.setSelectedIndex(i);
                    }
                }

                Arbitro aL2 = d.getArbitro(p.getArbitroL2());
                int iCboLB = cboPartido_ArbitroLB.getItemCount();
                for (int i = 0; i < iCboLB; i++) {
                    String nombreObj = cboPartido_ArbitroLB.getItemAt(i).toString();
                    String nombre = aL2.toString();
                    if (nombreObj.equalsIgnoreCase(nombre)) {
                        cboPartido_ArbitroLB.setSelectedIndex(i);
                    }
                }

                Arbitro a4 = d.getArbitro(p.getCuartoArbitro());
                int iCboD = cboPartido_ArbitroD.getItemCount();
                for (int i = 0; i < iCboD; i++) {
                    String nombreObj = cboPartido_ArbitroD.getItemAt(i).toString();
                    String nombre = a4.toString();
                    if (nombreObj.equalsIgnoreCase(nombre)) {
                        cboPartido_ArbitroD.setSelectedIndex(i);
                    }
                }

                Estadio es = d.getEstadio(p.getIdEstadio());
                int iCboEstadio = cboPartido_Estadio.getItemCount();
                for (int i = 0; i < iCboEstadio; i++) {
                    String nombreObj = cboPartido_Estadio.getItemAt(i).toString();
                    String nombre = es.toString();
                    if (nombreObj.equalsIgnoreCase(nombre)) {
                        cboPartido_Estadio.setSelectedIndex(i);
                    }
                }

                Fase f = d.getFase(p.getFase());
                int iCBOFase = cboPartido_Fase.getItemCount();
                for (int i = 0; i < iCBOFase; i++) {
                    String nombreObj = cboPartido_Fase.getItemAt(i).toString();
                    String nombre = f.toString();
                    if (nombreObj.equalsIgnoreCase(nombre)) {
                        cboPartido_Fase.setSelectedIndex(i);
                    }
                }

                int mes = Integer.parseInt(p.getMes());
                String mesString = null;

                switch (mes) {
                    case 1:
                        mesString = "Enero";
                        break;
                    case 2:
                        mesString = "Febrero";
                        break;
                    case 3:
                        mesString = "Marzo";
                        break;
                    case 4:
                        mesString = "Abril";
                        break;
                    case 5:
                        mesString = "Mayo";
                        break;
                    case 6:
                        mesString = "Junio";
                        break;
                    case 7:
                        mesString = "Julio";
                        break;
                    case 8:
                        mesString = "Agosto";
                        break;
                    case 9:
                        mesString = "Septiembre";
                        break;
                    case 10:
                        mesString = "Octubre";
                        break;
                    case 11:
                        mesString = "Noviembre";
                        break;
                    case 12:
                        mesString = "Diciembre";
                        break;
                }

                spPartido_Mes.setValue(mesString);
                int dia = Integer.parseInt(p.getDia());
                spPartido_Dia.setValue(dia);

                int h1 = Integer.parseInt(p.getHoraInicio());
                spPartido_InicioHora.setValue(h1);
                int m1 = Integer.parseInt(p.getMinInicio());
                spPartido_InicioMinuto.setValue(m1);
                int h2 = Integer.parseInt(p.getHoraTermino());
                spPartido_TerminoHora.setValue(h2);
                int m2 = Integer.parseInt(p.getMinTermino());
                spPartido_TerminoMinuto.setValue(m2);

                int publico = p.getPublico();
                spPartido_Publico.setValue(publico);

                btnPartidoActualizar.setEnabled(true);
                btnPartidoCancelar.setEnabled(true);
                btnPartidoEliminar.setEnabled(true);
                btnPartido_Crear.setEnabled(false);

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_tabPartidosMouseReleased

    private void btnPartido_CrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPartido_CrearActionPerformed
 Partido p;
        Object seleccionA = cboPartido_SeleccionA.getSelectedItem();
        Object seleccionB = cboPartido_SeleccionB.getSelectedItem();
        Object arbitroA = cboPartido_ArbitroA.getSelectedItem();
        Object arbitroLA = cboPartido_ArbitroLA.getSelectedItem();
        Object arbitroLB = cboPartido_ArbitroLB.getSelectedItem();
        Object arbitroD = cboPartido_ArbitroD.getSelectedItem();

        if (seleccionA.equals(seleccionB)
                || arbitroA.equals(arbitroLA)
                || arbitroA.equals(arbitroLB)
                || arbitroA.equals(arbitroD)
                || arbitroLA.equals(arbitroLB)
                || arbitroLA.equals(arbitroD)
                || arbitroLB.equals(arbitroD)) {
            JOptionPane.showMessageDialog(this, "Existen elementos repetidos. Verifique seleccion Selecciones y Arbitros");
        } else {
            Seleccion s1 = (Seleccion) seleccionA;
            Seleccion s2 = (Seleccion) seleccionB;
            Arbitro aA = (Arbitro) arbitroA;
            Arbitro aLA = (Arbitro) arbitroLA;
            Arbitro aLB = (Arbitro) arbitroLB;
            Arbitro aD = (Arbitro) arbitroD;
            p = new Partido();
            p.setIdSeleccion1(s1.getId());
            p.setIdSeleccion2(s2.getId());
            p.setArbitro(aA.getId());
            p.setArbitroL1(aLA.getId());
            p.setArbitroL2(aLB.getId());
            p.setCuartoArbitro(aD.getId());
            p.setPublico((Integer) spPartido_Publico.getValue());
            p.setDia(spPartido_Dia.getValue().toString());
            p.setMes(spPartido_Mes.getValue().toString());
            p.setHoraInicio(spPartido_InicioHora.getValue().toString());
            p.setHoraTermino(spPartido_TerminoHora.getValue().toString());
            p.setMinInicio(spPartido_InicioMinuto.getValue().toString());
            p.setMinTermino(spPartido_TerminoMinuto.getValue().toString());
            Fase f = (Fase) cboPartido_Fase.getSelectedItem();
            p.setFase(f.getId());

            Estadio estadio = (Estadio) cboPartido_Estadio.getSelectedItem();
            p.setIdEstadio(estadio.getId());

            try {
                d.crearPartido(p);
                JOptionPane.showMessageDialog(this, "Partido creado");
                cargarTablaPartidos(d.getPartidos());
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al crear Partido: " + e.getMessage());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Ingrese datos validos");
            }
        }
    }//GEN-LAST:event_btnPartido_CrearActionPerformed

    private void btnPartidoActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPartidoActualizarActionPerformed
    Partido p;
        Object seleccionA = cboPartido_SeleccionA.getSelectedItem();
        Object seleccionB = cboPartido_SeleccionB.getSelectedItem();
        Object arbitroA = cboPartido_ArbitroA.getSelectedItem();
        Object arbitroLA = cboPartido_ArbitroLA.getSelectedItem();
        Object arbitroLB = cboPartido_ArbitroLB.getSelectedItem();
        Object arbitroD = cboPartido_ArbitroD.getSelectedItem();

        if (seleccionA.equals(seleccionB)
                || arbitroA.equals(arbitroLA)
                || arbitroA.equals(arbitroLB)
                || arbitroA.equals(arbitroD)
                || arbitroLA.equals(arbitroLB)
                || arbitroLA.equals(arbitroD)
                || arbitroLB.equals(arbitroD)) {
            JOptionPane.showMessageDialog(this, "Existen elementos repetidos. Verifique seleccion Selecciones y Arbitros");
        } else {
            Seleccion s1 = (Seleccion) seleccionA;
            Seleccion s2 = (Seleccion) seleccionB;
            Arbitro aA = (Arbitro) arbitroA;
            Arbitro aLA = (Arbitro) arbitroLA;
            Arbitro aLB = (Arbitro) arbitroLB;
            Arbitro aD = (Arbitro) arbitroD;
            p = new Partido();
            p.setId(Integer.parseInt(txtPartido_ID.getText()));
            p.setIdSeleccion1(s1.getId());
            p.setIdSeleccion2(s2.getId());
            p.setArbitro(aA.getId());
            p.setArbitroL1(aLA.getId());
            p.setArbitroL2(aLB.getId());
            p.setCuartoArbitro(aD.getId());
            p.setPublico((Integer) spPartido_Publico.getValue());
            p.setDia(spPartido_Dia.getValue().toString());
            p.setMes(spPartido_Mes.getValue().toString());
            p.setHoraInicio(spPartido_InicioHora.getValue().toString());
            p.setHoraTermino(spPartido_TerminoHora.getValue().toString());
            p.setMinInicio(spPartido_InicioMinuto.getValue().toString());
            p.setMinTermino(spPartido_TerminoMinuto.getValue().toString());
            Fase f = (Fase) cboPartido_Fase.getSelectedItem();
            p.setFase(f.getId());

            Estadio estadio = (Estadio) cboPartido_Estadio.getSelectedItem();
            p.setIdEstadio(estadio.getId());

            try {
                d.actualizarPartido(p);
                JOptionPane.showMessageDialog(this, "Partido actualizado");
                cargarTablaPartidos(d.getPartidos());
                btnPartidoCancelar.doClick();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al actualizar Partido: " + e.getMessage());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Ingrese datos validos");
            }
        }
    }//GEN-LAST:event_btnPartidoActualizarActionPerformed

    private void btnPartidoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPartidoCancelarActionPerformed
        tabPartidos.clearSelection();
        txtPartido_ID.setText(null);
        txtPartidoBusqueda.setText(null);
        cboPartido_SeleccionA.setSelectedIndex(0);
        cboPartido_SeleccionB.setSelectedIndex(0);
        cboPartido_ArbitroA.setSelectedIndex(0);
        cboPartido_ArbitroLA.setSelectedIndex(0);
        cboPartido_ArbitroLB.setSelectedIndex(0);
        cboPartido_ArbitroD.setSelectedIndex(0);
        cboPartido_Estadio.setSelectedIndex(0);
        cboPartido_Fase.setSelectedIndex(0);
        spPartido_Dia.setValue(1);
        spPartido_InicioHora.setValue(0);
        spPartido_InicioMinuto.setValue(0);
        spPartido_Mes.setValue("Enero");
        spPartido_Publico.setValue(0);
        spPartido_TerminoHora.setValue(0);
        spPartido_TerminoMinuto.setValue(0);

        btnPartido_Crear.setEnabled(true);
        btnPartidoEliminar.setEnabled(false);
        btnPartidoActualizar.setEnabled(false);
        btnPartidoCancelar.setEnabled(false);
    }//GEN-LAST:event_btnPartidoCancelarActionPerformed

    private void btnPartidoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPartidoEliminarActionPerformed
        try {
            int id = Integer.parseInt(txtPartido_ID.getText());
            d.eliminarPartido(id);
            cargarTablaPartidos(d.getPartidos());
            btnPartidoCancelar.doClick();
            JOptionPane.showMessageDialog(this, "Partido ha sido eliminado");
        } catch (SQLException ex) {
            Logger.getLogger(AppCA.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPartidoEliminarActionPerformed

    private void txtPartidoBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPartidoBusquedaKeyReleased
        try {
            String filtro = txtPartidoBusqueda.getText();
            List<Partido> lista = d.buscarPartidos(filtro);
            cargarTablaPartidos(lista);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error para buscar: " + e.getMessage());
        }

    }//GEN-LAST:event_txtPartidoBusquedaKeyReleased

    private void tabDTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabDTMouseReleased
        if (evt.getClickCount() == 1) {
            try {
                int fila = tabDT.getSelectedRow();
                int id = (int) tabDT.getValueAt(fila, 0);
                DT dt = d.getDT(id);

                txtDT_ID.setText(Integer.toString(dt.getId()));
                txtDT_Nombre.setText(dt.getNombre());
                txtDT_Apellido.setText(dt.getApellido());
                txtDT_Sueldo.setText(Integer.toString(dt.getSueldoFifa()));

                ClubDeportivo c = d.getClubDeportivo(dt.getClubDeportivo());
                int indiceCbo = cbDT_Club.getItemCount();
                for (int i = 0; i < indiceCbo; i++) {
                    String nombreObj = cbDT_Club.getItemAt(i).toString();
                    if (nombreObj.equalsIgnoreCase(c.getNombre())) {
                        cbDT_Club.setSelectedIndex(i);
                    }
                }

                Nacionalidad n = d.getNacionalidad(dt.getNacionalidad());
                int indiceCbo2 = cbDT_Nacionalidad.getItemCount();
                for (int i = 0; i < indiceCbo2; i++) {
                    String nombreObj2 = cbDT_Nacionalidad.getItemAt(i).toString();
                    if (nombreObj2.equalsIgnoreCase(n.getPais())) {
                        cbDT_Nacionalidad.setSelectedIndex(i);
                    }
                }

                spDT_Anos.setValue(dt.getAniosDT());
                spDT_Edad.setValue(dt.getEdad());

                btnCrearDT.setEnabled(false);
                btnEliminarDT.setEnabled(true);
                btnCancelarDT.setEnabled(true);
                btnActualizarDT.setEnabled(true);
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_tabDTMouseReleased

    private void tabDTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabDTKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tabDTKeyReleased

    private void txtDT_ApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDT_ApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDT_ApellidoActionPerformed

    private void txtDT_NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDT_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDT_NombreActionPerformed

    private void btnCrearDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearDTActionPerformed
        DT nuevoDT = new DT();
        nuevoDT.setNombre(txtDT_Nombre.getText());
        nuevoDT.setApellido(txtDT_Apellido.getText());
        nuevoDT.setEdad(Integer.parseInt(spDT_Edad.getValue().toString()));
        nuevoDT.setAniosDT(Integer.parseInt(spDT_Anos.getValue().toString()));
        nuevoDT.setSueldoFifa(Integer.parseInt(txtDT_Sueldo.getText()));

        ClubDeportivo club = (ClubDeportivo) cbDT_Club.getSelectedItem();
        nuevoDT.setClubDeportivo(club.getId());

        Nacionalidad pais = (Nacionalidad) cbDT_Nacionalidad.getSelectedItem();
        nuevoDT.setNacionalidad(pais.getId());

        try {
            d.crearDT(nuevoDT);
            JOptionPane.showMessageDialog(this, "DT Creado");
            btnCancelarDT.doClick();
            cargarTablaDT(d.getDTs());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se ha podido crear DT: " + ex.getMessage());
        } catch (NumberFormatException exx) {
            JOptionPane.showMessageDialog(this, "Existen datos invalidos");
        }
    }//GEN-LAST:event_btnCrearDTActionPerformed

    private void btnActualizarDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarDTActionPerformed
        try {
            int id = Integer.parseInt(txtDT_ID.getText());
            String nombre = txtDT_Nombre.getText();
            String apellido = txtDT_Apellido.getText();
            int sueldo = Integer.parseInt(txtDT_Sueldo.getText());
            int edad = Integer.parseInt(spDT_Edad.getValue().toString());
            int anosDT = Integer.parseInt(spDT_Anos.getValue().toString());

            ClubDeportivo club = (ClubDeportivo) cbDT_Club.getSelectedItem();
            int idClub = club.getId();
            Nacionalidad pais = (Nacionalidad) cbDT_Nacionalidad.getSelectedItem();
            int idNacion = pais.getId();

            DT dt = new DT(id, nombre, apellido, edad, idNacion, idClub, anosDT, sueldo);
            d.actualizarDT(dt);
            cargarTablaDT(d.getDTs());
            btnCancelarDT.doClick();

            JOptionPane.showMessageDialog(this, "Se ha actualizado DT");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error para actualizar DT: " + ex.getMessage());
        } catch (ClassCastException e) {
            JOptionPane.showMessageDialog(this, "Seleccione un valor válido");
        }



    }//GEN-LAST:event_btnActualizarDTActionPerformed

    private void btnCancelarDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarDTActionPerformed
        txtDT_Nombre.setText(null);
        txtDT_Apellido.setText(null);
        txtDT_ID.setText(null);
        txtDT_Sueldo.setText(null);
        spDT_Anos.setValue(0);
        spDT_Edad.setValue(0);
        cbDT_Club.setSelectedIndex(0);
        cbDT_Nacionalidad.setSelectedIndex(0);
        tabDT.clearSelection();
        btnActualizarDT.setEnabled(false);
        btnCancelarDT.setEnabled(false);
        btnCrearDT.setEnabled(true);
        btnEliminarDT.setEnabled(false);



    }//GEN-LAST:event_btnCancelarDTActionPerformed

    private void btnEliminarDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDTActionPerformed
  try {
            int id = Integer.parseInt(txtDT_ID.getText());
            d.eliminarDT(id);
            cargarTablaDT(d.getDTs());
            btnCancelarDT.doClick();

            JOptionPane.showMessageDialog(this, "Se ha eliminado DT");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al eliminar DT: " + ex.getMessage());
        }



    }//GEN-LAST:event_btnEliminarDTActionPerformed

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void txtBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyReleased
        try {
            String filtro = txtBusqueda.getText();
            List<DT> lista = d.buscarDTs(filtro);
            cargarTablaDT(lista);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error para buscar: " + e.getMessage());
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaKeyReleased

    private void txtBuscarJugadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarJugadorKeyReleased
        try {
            String filtro = txtBuscarJugador.getText();
            List<Jugador> lista = d.buscarJugador(filtro);
            cargarTablaJugadores(lista);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error para buscar: " + e.getMessage());
        }



    }//GEN-LAST:event_txtBuscarJugadorKeyReleased

    private void cboPosicionJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPosicionJugadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboPosicionJugadorActionPerformed

    private void btnCancelarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarJugadorActionPerformed
        txtIDJugador.setText(null);
        txtNombreJugador.setText(null);
        txtApellidoJugador.setText(null);

        spEdadJugador.setValue(0);
        spDebutJugador.setValue(0);
        spSueldoJugador.setValue(0);
        spGolesJugador.setValue(0);
        spAtajadasJugador.setValue(0);
        spTarjetasAmarillas.setValue(0);
        spTarjetasRojas.setValue(0);

        cboPosicionJugador.setSelectedIndex(0);
        cboNacionalidadJugador.setSelectedIndex(0);
        cboClubDeportivoJugador.setSelectedIndex(0);
        cboEstadoFisicoJugador.setSelectedIndex(0);

        tabJugador.clearSelection();

        btnCrearJugador.setEnabled(true);
        btnActualizarJugador.setEnabled(false);
        btnCancelarJugador.setEnabled(false);
        btnEliminarJugador.setEnabled(false);



    }//GEN-LAST:event_btnCancelarJugadorActionPerformed

    private void btnEliminarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarJugadorActionPerformed
        try {
            int id = Integer.parseInt(txtIDJugador.getText());
            d.eliminarJugador(id);
            cargarTablaJugadores(d.getJugadores());
            btnCancelarJugador.doClick();

            JOptionPane.showMessageDialog(this, "Se ha eliminado jugador");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al eliminar jugador: " + ex.getMessage());
        }



    }//GEN-LAST:event_btnEliminarJugadorActionPerformed

    private void tabJugadorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabJugadorMouseReleased
if (evt.getClickCount() == 1) {
            try {
                int fila = tabJugador.getSelectedRow();
                int id = (int) tabJugador.getValueAt(fila, 0);
                Jugador j = d.getJugador(id);

                txtIDJugador.setText(Integer.toString(j.getId()));
                txtNombreJugador.setText(j.getNombre());
                txtApellidoJugador.setText(j.getApellido());
                spEdadJugador.setValue(j.getEdad());
                spDebutJugador.setValue(j.getAniosComoJugador());
                spSueldoJugador.setValue(j.getSueldoFIFA());
                spGolesJugador.setValue(j.getGoles());
                spAtajadasJugador.setValue(j.getAtajadas());
                spTarjetasAmarillas.setValue(j.getTarjetasAmarillas());
                spTarjetasRojas.setValue(j.getTarjetasRojas());

                Posicion p = d.getPosicion(j.getPosicion());
                int indiceCBO = cboPosicionJugador.getItemCount();
                for (int i = 0; i < indiceCBO; i++) {
                    String obj = cboPosicionJugador.getItemAt(i).toString();
                    if (obj.equalsIgnoreCase(p.getPosicion())) {
                        cboPosicionJugador.setSelectedIndex(i);
                    }
                }

                ClubDeportivo c = d.getClubDeportivo(j.getClubDeportivo());
                int indiceCBO2 = cboClubDeportivoJugador.getItemCount();
                for (int i = 0; i < indiceCBO2; i++) {
                    String obj2 = cboClubDeportivoJugador.getItemAt(i).toString();
                    if (obj2.equalsIgnoreCase(c.getNombre())) {
                        cboClubDeportivoJugador.setSelectedIndex(i);
                    }
                }

                Nacionalidad n = d.getNacionalidad(j.getNacionalidad());
                int indiceCBO3 = cboNacionalidadJugador.getItemCount();
                for (int i = 0; i < indiceCBO3; i++) {
                    String obj3 = cboNacionalidadJugador.getItemAt(i).toString();
                    if (obj3.equalsIgnoreCase(n.getPais())) {
                        cboNacionalidadJugador.setSelectedIndex(i);
                    }
                }

                EstadoFisico ef = d.getEstadoFisicoId(j.getPosicion());
                int indiceCBO4 = cboEstadoFisicoJugador.getItemCount();
                for (int i = 0; i < indiceCBO4; i++) {
                    String obj4 = cboEstadoFisicoJugador.getItemAt(i).toString();
                    if (obj4.equalsIgnoreCase(ef.getEstado())) {
                        cboEstadoFisicoJugador.setSelectedIndex(i);
                    }
                }
                
                Boolean isHabilitado=false;
                if(j.isHabilitado()==1){
                    isHabilitado=true;
                }else if(j.isHabilitado()==0){
                    isHabilitado=false;
                }

                if ((isHabilitado)) {
                    chkHabilitado.setSelected(true);
                    chkTitular.setSelected(false);
                } else {
                    chkHabilitado.setSelected(false);
                    chkTitular.setSelected(true);
                }

                Boolean isTitular=false;
                if(j.isTitular()==1){
                    isTitular=true;
                }else if(j.isTitular()==0){
                    isTitular=false;
                }                
                
                if (isTitular) {
                    chkTitular.setSelected(true);
                    chkHabilitado.setSelected(false);
                } else {
                    chkTitular.setSelected(false);
                    chkHabilitado.setSelected(true);
                }

                btnCrearJugador.setEnabled(false);
                btnEliminarJugador.setEnabled(true);
                btnCancelarJugador.setEnabled(true);
                btnActualizarJugador.setEnabled(true);
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_tabJugadorMouseReleased

    private void tabJugadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabJugadorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tabJugadorKeyReleased

    private void tabCTMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabCTMouseReleased
        if (evt.getClickCount() == 1) {
            try {
                int fila = tabCT.getSelectedRow();
                int id = (int) tabCT.getValueAt(fila, 0);
                CT ct = d.getCT(id);

                txtIDCT.setText(Integer.toString(ct.getId()));
                txtNombreCT.setText(ct.getNombre());
                txtApellidoCT.setText(ct.getApellido());
                spEdadCT.setValue(ct.getEdad());
                spAniosCT.setValue(ct.getAniosComoDT());
                spSueldoCT.setValue(ct.getSueldoFIFA());

                ClubDeportivo c = d.getClubDeportivo(ct.getClubDeportivo());
                int indiceCBO = cboClubDeportivoCT.getItemCount();
                for (int i = 0; i < indiceCBO; i++) {
                    String obj = cboClubDeportivoCT.getItemAt(i).toString();
                    if (obj.equalsIgnoreCase(c.getNombre())) {
                        cboClubDeportivoCT.setSelectedIndex(i);
                    }
                }

                Nacionalidad n = d.getNacionalidad(ct.getNacionalidad());
                int indiceCBO2 = cboNacionalidadCT.getItemCount();
                for (int i = 0; i < indiceCBO2; i++) {
                    String obj2 = cboNacionalidadCT.getItemAt(i).toString();
                    if (obj2.equalsIgnoreCase(n.getPais())) {
                        cboNacionalidadCT.setSelectedIndex(i);
                    }
                }

                btnCrearCT.setEnabled(false);
                btnEliminarCT.setEnabled(true);
                btnCancelarCT.setEnabled(true);
                btnActualizarCT.setEnabled(true);
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_tabCTMouseReleased

    private void tabCTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabCTKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tabCTKeyReleased

    private void txtApellidoCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoCTActionPerformed

    private void txtNombreCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreCTActionPerformed

    private void btnCrearCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCTActionPerformed
        CT nuevoCT = new CT();
        nuevoCT.setNombre(txtNombreCT.getText());
        nuevoCT.setApellido(txtApellidoCT.getText());
        nuevoCT.setEdad(Integer.parseInt(spEdadCT.getValue().toString()));
        nuevoCT.setAniosComoDT(Integer.parseInt(spAniosCT.getValue().toString()));
        nuevoCT.setSueldoFIFA(Integer.parseInt(spSueldoCT.getValue().toString()));

        ClubDeportivo club = (ClubDeportivo) cboClubDeportivoCT.getSelectedItem();
        nuevoCT.setClubDeportivo(club.getId());

        Nacionalidad pais = (Nacionalidad) cboNacionalidadCT.getSelectedItem();
        nuevoCT.setNacionalidad(pais.getId());

        try {
            d.crearCT(nuevoCT);
            JOptionPane.showMessageDialog(this, "CT Creado");
            btnCancelarCT.doClick();
            cargarTablaCT(d.getCTs());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se ha podido crear CT: " + ex.getMessage());
        } catch (NumberFormatException exx) {
            JOptionPane.showMessageDialog(this, "Existen datos invalidos");
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_btnCrearCTActionPerformed

    private void btnActualizarCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarCTActionPerformed
        try {
            int id = Integer.parseInt(txtIDCT.getText());
            String nombre = txtNombreCT.getText();
            String apellido = txtApellidoCT.getText();
            int sueldo = (int) spSueldoCT.getValue();
            int edad = (int) spEdadCT.getValue();
            int anosCT = (int) spAniosCT.getValue();

            ClubDeportivo club = (ClubDeportivo) cboClubDeportivoCT.getSelectedItem();
            int idClub = club.getId();
            Nacionalidad pais = (Nacionalidad) cboNacionalidadCT.getSelectedItem();
            int idNacion = pais.getId();

            CT ct = new CT(id, nombre, apellido, edad, idNacion, idClub, anosCT, sueldo);
            d.actualizarCT(ct);
            cargarTablaCT(d.getCTs());
            btnCancelarCT.doClick();

            JOptionPane.showMessageDialog(this, "Se ha actualizado CT");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error para actualizar CT: " + ex.getMessage());
        } catch (ClassCastException e) {
            JOptionPane.showMessageDialog(this, "Seleccione un valor válido");
        }


    }//GEN-LAST:event_btnActualizarCTActionPerformed

    private void btnCancelarCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCTActionPerformed
        txtIDCT.setText(null);
        txtNombreCT.setText(null);
        txtApellidoCT.setText(null);

        spSueldoCT.setValue(0);
        spAniosCT.setValue(0);
        spEdadCT.setValue(0);

        cboClubDeportivoCT.setSelectedIndex(0);
        cboNacionalidadCT.setSelectedIndex(0);

        tabCT.clearSelection();

        btnActualizarCT.setEnabled(false);
        btnCancelarCT.setEnabled(false);
        btnCrearCT.setEnabled(true);
        btnEliminarCT.setEnabled(false);



    }//GEN-LAST:event_btnCancelarCTActionPerformed

    private void btnEliminarCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCTActionPerformed
   try {
            int id = Integer.parseInt(txtIDCT.getText());
            d.eliminarCT(id);
            cargarTablaCT(d.getCTs());
            btnCancelarCT.doClick();

            JOptionPane.showMessageDialog(this, "Se ha eliminado Cuerpo Técnico");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al eliminar Cuerpo Técnico: " + ex.getMessage());
        }



    }//GEN-LAST:event_btnEliminarCTActionPerformed

    private void txtBusquedaCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaCTActionPerformed

    private void txtBusquedaCTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaCTKeyReleased
        try {
            String filtro = txtBusquedaCT.getText();
            List<CT> lista = d.buscarCT(filtro);
            cargarTablaCT(lista);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error para buscar: " + e.getMessage());
        }



    }//GEN-LAST:event_txtBusquedaCTKeyReleased

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        try {
            String user=txtLoginUser.getText();
            String pass=txtLoginPass.getText();
            boolean acceso=d.validarUsuario(user, pass);
            if(acceso){
                JOptionPane.showMessageDialog(this, "Bienvenido");
                JFMain.setVisible(acceso);
                JFMain.setLocationRelativeTo(null);
            }else{
                JOptionPane.showMessageDialog(this, "Datos erroneos. Pruebe nuevamente");
                txtLoginPass.setText(null);
                txtLoginUser.setText(null);
//                txtLoginUser.requestFocus();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se ha podido ejecutar login");
        }
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnCrearJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearJugadorActionPerformed
        Jugador j;
        Object posicion = cboPosicionJugador.getSelectedItem();
        Object nacionalidad = cboNacionalidadJugador.getSelectedItem();
        Object clubDeportivo = cboClubDeportivoJugador.getSelectedItem();
        Object estadoFisico = cboEstadoFisicoJugador.getSelectedItem();

        Posicion p = (Posicion) posicion;
        Nacionalidad n = (Nacionalidad) nacionalidad;
        ClubDeportivo cd = (ClubDeportivo) clubDeportivo;
        EstadoFisico ef = (EstadoFisico) estadoFisico;

        j = new Jugador();
//        j.setId(Integer.parseInt(txtIDJugador.getText()));
        j.setNombre(txtNombreJugador.getText());
        j.setApellido(txtApellidoJugador.getText());
        j.setEdad(Integer.parseInt(spEdadJugador.getValue().toString()));
        j.setNacionalidad(n.getId());
        j.setClubDeportivo(cd.getId());
        j.setEstadoFisico(ef.getId());

        if (chkTitular.isSelected()) {
            j.setTitular(1);
        } else {
            j.setTitular(0);
        }
        j.setPosicion(p.getId());
        j.setNroCamiseta(Integer.parseInt("1"));
        j.setAniosComoJugador(Integer.parseInt(spDebutJugador.getValue().toString()));
        j.setGoles(Integer.parseInt(spGolesJugador.getValue().toString()));
        j.setAtajadas(Integer.parseInt(spAtajadasJugador.getValue().toString()));
        j.setSueldoFIFA(Integer.parseInt(spSueldoJugador.getValue().toString()));
        j.setTarjetasRojas(Integer.parseInt(spTarjetasRojas.getValue().toString()));
        j.setTarjetasAmarillas(Integer.parseInt(spTarjetasRojas.getValue().toString()));

        if (chkHabilitado.isSelected()) {
            j.setHabilitado(1);
        } else {
            j.setHabilitado(0);
        }

        try {
            d.crearJugador(j);
            JOptionPane.showMessageDialog(this, "Creación exitosa");
            cargarTablaJugadores(d.getJugadores());
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al crear Jugador: " + e.getMessage());
        } catch (NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Indique datos validos");
        }
    }//GEN-LAST:event_btnCrearJugadorActionPerformed

    private void txtLoginPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLoginPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLoginPassActionPerformed

    private void txtLoginPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLoginPassKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            btnIniciar.doClick();
        }
    }//GEN-LAST:event_txtLoginPassKeyReleased

    private void jTabbedPane2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTabbedPane2KeyReleased
        try {
            String filtro = txtBusquedaCT.getText();
            List<CT> lista = d.buscarCT(filtro);
            cargarTablaCT(lista);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error para buscar: " + e.getMessage());
        }



    }//GEN-LAST:event_jTabbedPane2KeyReleased

    private void btnPartido_CrearKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnPartido_CrearKeyReleased

    }//GEN-LAST:event_btnPartido_CrearKeyReleased

    private void btnActualizarJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarJugadorActionPerformed
        try {
            int id = Integer.parseInt(txtIDJugador.getText());
            String nombre = txtNombreJugador.getText();
            String apellido = txtApellidoJugador.getText();
            int edad = (int) spEdadJugador.getValue();
            int esTitular = 0;
            int esHabilitado = 0;
            int nroCamiseta = 0;
            int anosJ = (int) spDebutJugador.getValue();
            int goles = (int) spGolesJugador.getValue();
            int atajadas = (int) spAtajadasJugador.getValue();
            int sueldo = (int) spSueldoJugador.getValue();
            int tarjetasA = (int) spTarjetasAmarillas.getValue();
            int tarjetasR = (int) spTarjetasRojas.getValue();

            if (chkTitular.isSelected()) {
                esTitular = 1;
            } else {
                esTitular = 0;
            }

            if (chkHabilitado.isSelected()) {
                esHabilitado = 1;
            } else {
                esHabilitado = 0;
            }

            ClubDeportivo club = (ClubDeportivo) cboClubDeportivoJugador.getSelectedItem();
            int idClub = club.getId();
            Nacionalidad pais = (Nacionalidad) cboNacionalidadJugador.getSelectedItem();
            int idNacion = pais.getId();
            EstadoFisico estadoFisico = (EstadoFisico) cboEstadoFisicoJugador.getSelectedItem();
            int idEstado = estadoFisico.getId();
            Posicion posicion = (Posicion) cboPosicionJugador.getSelectedItem();
            int idPosicion = posicion.getId();

            Jugador j = new Jugador(id, nombre, apellido, edad, idNacion, idClub, idEstado, idPosicion, nroCamiseta, anosJ, goles, atajadas, sueldo, tarjetasA, tarjetasR, esTitular, esHabilitado);
            d.actualizarJugador(j);
            cargarTablaJugadores(d.getJugadores());
            btnCancelarJugador.doClick();

            JOptionPane.showMessageDialog(this, "Se ha actualizado Jugador");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error para actualizar Jugador: " + ex.getMessage());
        } catch (ClassCastException e) {
            JOptionPane.showMessageDialog(this, "Seleccione un valor válido");
        }
    }//GEN-LAST:event_btnActualizarJugadorActionPerformed

    private void txtArbitroNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArbitroNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtArbitroNombreActionPerformed

    private void btnArbitroCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbitroCancelarActionPerformed
        txtArbitroID.setText(null);
        txtArbitroNombre.setText(null);
        txtArbitroApellid.setText(null);
        txtArbitroBuscar.setText(null);
        cboArbitroPais.setSelectedIndex(0);
        
        btnArbitroActualizar.setEnabled(false);
        btnArbitroCrear.setEnabled(true);
        btnArbitroCancelar.setEnabled(false);
        btnArbitroEliminar.setEnabled(false);
        
        tabArbitro.clearSelection();
    }//GEN-LAST:event_btnArbitroCancelarActionPerformed

    private void btnArbitroCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbitroCrearActionPerformed
        String nombre=txtArbitroNombre.getText();
        String apellido=txtArbitroApellid.getText();
        int edad=(int)spArbitroEdad.getValue();
        
        Nacionalidad n=(Nacionalidad)cboArbitroPais.getSelectedItem();
        int pais=n.getId();
        
        Arbitro a=new Arbitro(nombre, apellido, edad, null, pais);
        
        try {
            d.crearArbitro(a);                      
            cargarTablaArbitro(d.getArbitros());

            txtArbitroID.setText(null);
            txtArbitroNombre.setText(null);
            txtArbitroApellid.setText(null);
            txtArbitroBuscar.setText(null);
            cboArbitroPais.setSelectedIndex(0);

            btnArbitroActualizar.setEnabled(false);
            btnArbitroCrear.setEnabled(true);
            btnArbitroCancelar.setEnabled(false);
            btnArbitroEliminar.setEnabled(false); 
            
            actualizarCBOsArbitros();
            
            JOptionPane.showMessageDialog(this, "Arbitro creado!");  
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se ha podido crear Arbitro: "+ex.getMessage());
        } catch (NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Indice solo numeros donde corresponde");
        }
    }//GEN-LAST:event_btnArbitroCrearActionPerformed

    private void tabArbitroMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabArbitroMouseReleased
        if(evt.getClickCount() == 1){
            try {
                int fila=tabArbitro.getSelectedRow();
                int id=(int)tabArbitro.getValueAt(fila, 0);
                Arbitro a=d.getArbitro(id);
                
                txtArbitroID.setText(Integer.toString(a.getId()));
                txtArbitroNombre.setText(a.getNombre());
                txtArbitroApellid.setText(a.getApellido());                
                spArbitroEdad.setValue(a.getEdad());
                
                Nacionalidad n=d.getNacionalidad(a.getPais());
                int indice=cboArbitroPais.getItemCount();
                for(int i=0; i<indice; i++){
                    String obj=cboArbitroPais.getItemAt(i).toString();
                    if(obj.equalsIgnoreCase(n.getPais())){
                        cboArbitroPais.setSelectedIndex(i);
                    }
                }
                
                btnArbitroActualizar.setEnabled(true);
                btnArbitroEliminar.setEnabled(true);
                btnArbitroCancelar.setEnabled(true);
                btnArbitroCrear.setEnabled(false);
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }            
        }
    }//GEN-LAST:event_tabArbitroMouseReleased

    private void btnArbitroActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbitroActualizarActionPerformed
        try {
            int id = Integer.parseInt(txtArbitroID.getText());
            String nombre = txtArbitroNombre.getText();
            String apellido = txtArbitroApellid.getText();
            int edad = (int) spArbitroEdad.getValue();

            Nacionalidad n = (Nacionalidad) cboArbitroPais.getSelectedItem();
            int pais = n.getId();

            Arbitro a = new Arbitro(nombre, apellido, edad, null, pais);
            a.setId(Integer.parseInt(txtArbitroID.getText()));
            d.actualizarArbitro(a);
            cargarTablaArbitro(d.getArbitros());

            txtArbitroID.setText(null);
            txtArbitroNombre.setText(null);
            txtArbitroApellid.setText(null);
            txtArbitroBuscar.setText(null);
            cboArbitroPais.setSelectedIndex(0);

            btnArbitroActualizar.setEnabled(false);
            btnArbitroCrear.setEnabled(true);
            btnArbitroCancelar.setEnabled(false);
            btnArbitroEliminar.setEnabled(false);

            tabArbitro.clearSelection();
            
            actualizarCBOsArbitros();

            JOptionPane.showMessageDialog(this, "Arbitro actualizado");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se ha podido actualizar arbitro");
        } catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Indique solo numeros donde corresponda.");
        }
    }//GEN-LAST:event_btnArbitroActualizarActionPerformed

    private void txtArbitroBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtArbitroBuscarKeyReleased
        try {
            String filtro = txtArbitroBuscar.getText();
            List<Arbitro> lista = d.buscarArbitros(filtro);
            cargarTablaArbitro(lista);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error para buscar: " + e.getMessage());
        }
    }//GEN-LAST:event_txtArbitroBuscarKeyReleased

    private void btnArbitroEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbitroEliminarActionPerformed
        try {
            int id=Integer.parseInt(txtArbitroID.getText());
            d.eliminarArbitro(id);
            cargarTablaArbitro(d.getArbitros());
            actualizarCBOsArbitros();
            btnArbitroCancelar.doClick();
            
            JOptionPane.showMessageDialog(this, "Arbitro eliminado");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "No se ha podido eliminar arbitro: "+e.getMessage());
        }
    }//GEN-LAST:event_btnArbitroEliminarActionPerformed

    private void tabClubDeportivoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabClubDeportivoKeyReleased
        
    }//GEN-LAST:event_tabClubDeportivoKeyReleased

    private void tabClubDeportivoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabClubDeportivoMouseReleased
        try {
            int fila=tabClubDeportivo.getSelectedRow();
            int id=(int) tabClubDeportivo.getValueAt(fila, 0);
            
            ClubDeportivo club=d.getClubDeportivo(id);
            txtClubID.setText(Integer.toString(club.getId()));
            txtClubNombre.setText(club.getNombre());
            
            btnClubActualizar.setEnabled(true);
            btnClubCancelar.setEnabled(true);
            btnClubEliminar.setEnabled(true);
            btnClubCrear.setEnabled(false);
            
        } catch (SQLException ex) {
            System.out.println("No se ha podido cargar tabla club");
        }
    }//GEN-LAST:event_tabClubDeportivoMouseReleased

    private void btnClubCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClubCancelarActionPerformed
        txtClubID.setText(null);
        txtClubNombre.setText(null);
        tabClubDeportivo.clearSelection();
        
        btnClubActualizar.setEnabled(false);
        btnClubCrear.setEnabled(true);
        btnClubCancelar.setEnabled(false);
        btnClubEliminar.setEnabled(false);
    }//GEN-LAST:event_btnClubCancelarActionPerformed

    private void btnClubCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClubCrearActionPerformed
        try {
            String nombre= txtClubNombre.getText();
            d.crearClubDeportivo(nombre);
            
            JOptionPane.showMessageDialog(this, "Se ha creado Club Deportivo");
            actualizarCBOClubDeportivo();
            cargarTablaClubDeportivo(d.getClubDeportivos());
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se ha podido crear Club");
        }
    }//GEN-LAST:event_btnClubCrearActionPerformed

    private void btnClubActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClubActualizarActionPerformed
        try {
            int id=Integer.parseInt(txtClubID.getText());
            String nombre=txtClubNombre.getText();
            ClubDeportivo club=new ClubDeportivo();
            club.setId(id);
            club.setNombre(nombre);
            
            d.actualizarClubDeportivo(club);
            cargarTablaClubDeportivo(d.getClubDeportivos());
            actualizarCBOClubDeportivo();
            JOptionPane.showMessageDialog(this, "Se ha actualizaro Club correctamente");
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se ha podido actualizar club");
        }
    }//GEN-LAST:event_btnClubActualizarActionPerformed

    private void btnClubEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClubEliminarActionPerformed
        try {
            int id=Integer.parseInt(txtClubID.getText());
            d.eliminarClubDeportivo(id);
            actualizarCBOClubDeportivo();
            cargarTablaClubDeportivo(d.getClubDeportivos());
            
            JOptionPane.showMessageDialog(this, "Se ha eliminado club");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "No se ha podido eliminar Club");
        }
    }//GEN-LAST:event_btnClubEliminarActionPerformed

    private void txtClubBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClubBusquedaKeyReleased
        try {
            String filtro = txtClubBusqueda.getText();
            List<ClubDeportivo> lista = d.buscarClubDeportivos(filtro);
            cargarTablaClubDeportivo(lista);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error para buscar: " + e.getMessage());
        }
    }//GEN-LAST:event_txtClubBusquedaKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        String nombre = UIManager.getSystemLookAndFeelClassName();
        try {
            UIManager.setLookAndFeel(nombre);
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppCA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppCA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame JFMain;
    private javax.swing.JButton btnActualizarCT;
    private javax.swing.JButton btnActualizarDT;
    private javax.swing.JButton btnActualizarJugador;
    private javax.swing.JButton btnArbitroActualizar;
    private javax.swing.JButton btnArbitroCancelar;
    private javax.swing.JButton btnArbitroCrear;
    private javax.swing.JButton btnArbitroEliminar;
    private javax.swing.JButton btnCancelarCT;
    private javax.swing.JButton btnCancelarDT;
    private javax.swing.JButton btnCancelarJugador;
    private javax.swing.JButton btnClubActualizar;
    private javax.swing.JButton btnClubCancelar;
    private javax.swing.JButton btnClubCrear;
    private javax.swing.JButton btnClubEliminar;
    private javax.swing.JButton btnCrearCT;
    private javax.swing.JButton btnCrearDT;
    private javax.swing.JButton btnCrearJugador;
    private javax.swing.JButton btnEliminarCT;
    private javax.swing.JButton btnEliminarDT;
    private javax.swing.JButton btnEliminarJugador;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnPartidoActualizar;
    private javax.swing.JButton btnPartidoCancelar;
    private javax.swing.JButton btnPartidoEliminar;
    private javax.swing.JButton btnPartido_Crear;
    private javax.swing.JComboBox<Object> cbDT_Club;
    private javax.swing.JComboBox<Object> cbDT_Nacionalidad;
    private javax.swing.JComboBox<Object> cboArbitroPais;
    private javax.swing.JComboBox<Object> cboClubDeportivoCT;
    private javax.swing.JComboBox<Object> cboClubDeportivoJugador;
    private javax.swing.JComboBox<Object> cboEstadoFisicoJugador;
    private javax.swing.JComboBox<Object> cboNacionalidadCT;
    private javax.swing.JComboBox<Object> cboNacionalidadJugador;
    private javax.swing.JComboBox<Object> cboPartido_ArbitroA;
    private javax.swing.JComboBox<Object> cboPartido_ArbitroD;
    private javax.swing.JComboBox<Object> cboPartido_ArbitroLA;
    private javax.swing.JComboBox<Object> cboPartido_ArbitroLB;
    private javax.swing.JComboBox<Object> cboPartido_Estadio;
    private javax.swing.JComboBox<Object> cboPartido_Fase;
    private javax.swing.JComboBox<Object> cboPartido_SeleccionA;
    private javax.swing.JComboBox<Object> cboPartido_SeleccionB;
    private javax.swing.JComboBox<Object> cboPosicionJugador;
    private javax.swing.JCheckBox chkHabilitado;
    private javax.swing.JCheckBox chkTitular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JSpinner spAniosCT;
    private javax.swing.JSpinner spArbitroEdad;
    private javax.swing.JSpinner spAtajadasJugador;
    private javax.swing.JSpinner spDT_Anos;
    private javax.swing.JSpinner spDT_Edad;
    private javax.swing.JSpinner spDebutJugador;
    private javax.swing.JSpinner spEdadCT;
    private javax.swing.JSpinner spEdadJugador;
    private javax.swing.JSpinner spGolesJugador;
    private javax.swing.JSpinner spPartido_Dia;
    private javax.swing.JSpinner spPartido_InicioHora;
    private javax.swing.JSpinner spPartido_InicioMinuto;
    private javax.swing.JSpinner spPartido_Mes;
    private javax.swing.JSpinner spPartido_Publico;
    private javax.swing.JSpinner spPartido_TerminoHora;
    private javax.swing.JSpinner spPartido_TerminoMinuto;
    private javax.swing.JSpinner spSueldoCT;
    private javax.swing.JSpinner spSueldoJugador;
    private javax.swing.JSpinner spTarjetasAmarillas;
    private javax.swing.JSpinner spTarjetasRojas;
    private javax.swing.JTable tabArbitro;
    private javax.swing.JTable tabCT;
    private javax.swing.JTable tabClubDeportivo;
    private javax.swing.JTable tabDT;
    private javax.swing.JTable tabJugador;
    private javax.swing.JTable tabPartidos;
    private javax.swing.JTextField txtApellidoCT;
    private javax.swing.JTextField txtApellidoJugador;
    private javax.swing.JTextField txtArbitroApellid;
    private javax.swing.JTextField txtArbitroBuscar;
    private javax.swing.JTextField txtArbitroID;
    private javax.swing.JTextField txtArbitroNombre;
    private javax.swing.JTextField txtBuscarJugador;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtBusquedaCT;
    private javax.swing.JTextField txtClubBusqueda;
    private javax.swing.JTextField txtClubID;
    private javax.swing.JTextField txtClubNombre;
    private javax.swing.JTextField txtDT_Apellido;
    private javax.swing.JTextField txtDT_ID;
    private javax.swing.JTextField txtDT_Nombre;
    private javax.swing.JTextField txtDT_Sueldo;
    private javax.swing.JTextField txtIDCT;
    private javax.swing.JTextField txtIDJugador;
    private javax.swing.JPasswordField txtLoginPass;
    private javax.swing.JTextField txtLoginUser;
    private javax.swing.JTextField txtNombreCT;
    private javax.swing.JTextField txtNombreJugador;
    private javax.swing.JTextField txtPartidoBusqueda;
    private javax.swing.JTextField txtPartido_ID;
    // End of variables declaration//GEN-END:variables

    private void iniciar() throws SQLException {
        cargarComponentesDT();
        cargarComponentesPartidos();
        cargarComponentesJugador();
        cargarComponentesCT();
        cargarComponentesArbitro();
        cargarTablaClubDeportivo(d.getClubDeportivos());
    }

    private void cargarTablaPartidos(List<Partido> lista) throws SQLException {
        TMPartido modeloPartidos = new TMPartido(lista);
        tabPartidos.setModel(modeloPartidos);
    }

    private void cargarTablaDT(List<DT> dts) throws SQLException {
        TM_DT model = new TM_DT(dts);
        tabDT.setModel(model);
        tabDT.getColumnModel().getColumn(0).setPreferredWidth(5);
        tabDT.getColumnModel().getColumn(1).setPreferredWidth(10);
        tabDT.getColumnModel().getColumn(2).setPreferredWidth(10);
    }

    private void actualizarCBONacionalidad() {
        try {
            List<Nacionalidad> paises = d.getNacionalidades();
            cboArbitroPais.removeAllItems();
            cbDT_Nacionalidad.removeAllItems();
            cboNacionalidadJugador.removeAllItems();
            cboNacionalidadCT.removeAllItems();

            cboArbitroPais.addItem("Seleccione Nacionalidad...");
            cbDT_Nacionalidad.addItem("Seleccione Nacionalidad...");
            cboNacionalidadCT.addItem("Seleccione Nacionalidad...");
            cboNacionalidadJugador.addItem("Seleccione Nacionalidad...");
            for (Nacionalidad n : paises) {
                cbDT_Nacionalidad.addItem(n);
                cboNacionalidadJugador.addItem(n);
                cboNacionalidadCT.addItem(n);
                cboArbitroPais.addItem(n);
            }
        } catch (Exception e) {
            System.out.println("Error cargar cbGenero: " + e.getMessage());
        }
    }

    private void actualizarCBOClubDeportivo() {
        try {
            List<ClubDeportivo> clubes = d.getClubDeportivos();
            cbDT_Club.removeAllItems();
            cboClubDeportivoCT.removeAllItems();
            cboClubDeportivoJugador.removeAllItems();

            cbDT_Club.addItem("Seleccione club deportivo...");
            cboClubDeportivoCT.addItem("Seleccione club deportivo...");
            cboClubDeportivoJugador.addItem("Seleccione club deportivo...");
            for (ClubDeportivo club : clubes) {
                cbDT_Club.addItem(club);
                cboClubDeportivoCT.addItem(club);
                cboClubDeportivoJugador.addItem(club);
            }
        } catch (Exception e) {
            System.out.println("Error cargar cbDT_Club: " + e.getMessage());
        }
    }

    private void cargarComponentesDT() throws SQLException {
        cargarTablaDT(d.getDTs());
        actualizarCBONacionalidad();
        actualizarCBOClubDeportivo();
        btnCancelarDT.doClick();
    }

    private void cargarComponentesPartidos() throws SQLException {
        cargarTablaPartidos(d.getPartidos());
        actualizarCBOsSeleccion();
        actualizarCBOsArbitros();
        actualizarCBOsEstadio();
        actualizarCBOFases();
        btnPartidoCancelar.doClick();
    }

    private void actualizarCBOsSeleccion() {
        try {
            List<Seleccion> selecciones = d.getSelecciones();
            cboPartido_SeleccionA.removeAllItems();
            cboPartido_SeleccionB.removeAllItems();

            cboPartido_SeleccionA.addItem("Seleccione seleccion...");
            for (Seleccion s : selecciones) {
                cboPartido_SeleccionA.addItem(s);
            }

            cboPartido_SeleccionB.addItem("Seleccione seleccion...");
            for (Seleccion s : selecciones) {
                cboPartido_SeleccionB.addItem(s);
            }

        } catch (Exception e) {
            System.out.println("Error cargar ComboboxSelecciones: " + e.getMessage());
        }
    }

    private void actualizarCBOsArbitros() {
        try {
            List<Arbitro> arbitros = d.getArbitros();
            cboPartido_ArbitroA.removeAllItems();
            cboPartido_ArbitroD.removeAllItems();
            cboPartido_ArbitroLA.removeAllItems();
            cboPartido_ArbitroLB.removeAllItems();

            cboPartido_ArbitroA.addItem("Seleccione arbitro...");
            cboPartido_ArbitroD.addItem("Seleccione arbitro...");
            cboPartido_ArbitroLA.addItem("Seleccione arbitro...");
            cboPartido_ArbitroLB.addItem("Seleccione arbitro...");
            for (Arbitro a : arbitros) {
                cboPartido_ArbitroA.addItem(a);
                cboPartido_ArbitroD.addItem(a);
                cboPartido_ArbitroLA.addItem(a);
                cboPartido_ArbitroLB.addItem(a);
            }
        } catch (Exception e) {
            System.out.println("Error cargar CBOSelecciones: " + e.getMessage());
        }
    }

    private void actualizarCBOsEstadio() {
        try {
            List<Estadio> estadios = d.getEstadios();
            cboPartido_Estadio.removeAllItems();

            cboPartido_Estadio.addItem("Seleccione estadio..");
            for (Estadio e : estadios) {
                cboPartido_Estadio.addItem(e);
            }
        } catch (Exception e) {
            System.out.println("Error cargar CBOestadios: " + e.getMessage());
        }
    }

    private void actualizarCBOFases() {
        try {
            List<Fase> fases = d.getFases();
            cboPartido_Fase.removeAllItems();

            cboPartido_Fase.addItem("Seleccione fase..");
            for (Fase f : fases) {
                cboPartido_Fase.addItem(f);
            }
        } catch (Exception e) {
            System.out.println("Error cargar CBOFases: " + e.getMessage());
        }
    }

    private void actualizarCBOEstadoFisico() {
        try {
            List<EstadoFisico> estados = d.getEstadoFisico();
            cboEstadoFisicoJugador.removeAllItems();

            cboEstadoFisicoJugador.addItem("Seleccionar estado fisico...");
            for (EstadoFisico e : estados) {
                cboEstadoFisicoJugador.addItem(e);
            }
        } catch (Exception e) {
            System.out.println("Error cargrarCBOEstadoFisico: " + e.getMessage());
        }
    }

    private void cargarComponentesJugador() throws SQLException {
        cargarTablaJugadores(d.getJugadores());
        actualizarCBOsPosicion();
        actualizarCBOEstadoFisico();
    }

    private void actualizarCBOsPosicion() {
        try {
            List<Posicion> posiciones = d.getPosiciones();
            cboPosicionJugador.removeAllItems();

            cboPosicionJugador.addItem("Seleccionar Posición...");
            for (Posicion p : posiciones) {
                cboPosicionJugador.addItem(p);
            }
        } catch (Exception e) {
            System.out.println("Error cargarCBOsJugador: " + e.getMessage());
        }
    }

    private void cargarComponentesCT() throws SQLException {
        cargarTablaCT(d.getCTs());
    }

    private void cargarTablaCT(List<CT> cTs) {
        TMCuerpoTecnico model = new TMCuerpoTecnico(cTs);
        tabCT.setModel(model);
    }

    private void cargarTablaJugadores(List<Jugador> jugadores) throws SQLException {
        TMJugador model = new TMJugador(jugadores);
        tabJugador.setModel(model);
        tabJugador.getColumnModel().getColumn(0).setPreferredWidth(5);
        tabJugador.getColumnModel().getColumn(1).setPreferredWidth(10);
        tabJugador.getColumnModel().getColumn(2).setPreferredWidth(10);
    }

    private void cargarComponentesArbitro() throws SQLException {
        cargarTablaArbitro(d.getArbitros());
        btnArbitroCancelar.doClick();
    }

    private void cargarTablaArbitro(List <Arbitro> arbitros) {
        TMArbitro model=new TMArbitro(arbitros);
        tabArbitro.setModel(model);
        tabArbitro.getColumnModel().getColumn(0).setPreferredWidth(5);
        tabArbitro.getColumnModel().getColumn(1).setPreferredWidth(10);
        tabArbitro.getColumnModel().getColumn(2).setPreferredWidth(10);
    }

    private void cargarTablaClubDeportivo(List <ClubDeportivo> clubes) {
        TMClub model=new TMClub(clubes);
        tabClubDeportivo.setModel(model);
        tabClubDeportivo.getColumnModel().getColumn(0).setPreferredWidth(5);
        tabClubDeportivo.getColumnModel().getColumn(1).setPreferredWidth(10);
        btnClubCancelar.doClick();
    }

}
